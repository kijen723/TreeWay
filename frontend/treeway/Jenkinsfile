pipeline {
    agent any

    environment {
        TARGET_BRANCH='develop/fe'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    // def branch = env.gitlabSourceBranch ?: 'develop/fe'
                    // if(branch != env.TARGET_BRANCH) {
                    //     error "This build is only for the '${env.TARGET_BRANCH}' branch, but was run on '${branch}'"
                    // }

                    checkout scm
                }
            }
        }
          stage('Set .ENV File') {
            steps {
                dir('frontend/treeway') {
	       sh 'rm -f .env.production'
                    sh 'rm -f .env.production.swp'
                    withCredentials([file(credentialsId: '.ENV.PRODUCTION', variable: 'ENV_PRODUCTION')]) {
                        sh 'cat $ENV_PRODUCTION > .env.production' 
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'docker build --no-cache -t treeway-dev-frontend:latest ./frontend/treeway'
                    // sh 'docker build -t treeway-dev-frontend:latest ./frontend'
                }
            }
        }
        // stage('Stop old Container') {
        //     steps {
        //         script {
        //             sh 'docker stop treeway-dev-frontend'
        //             sh 'docker rm treeway-dev-frontend' 
        //         }
        //     }
        // }

        stage('Depoly') {
            steps {
                dir('/var/jenkins_home/workspace/test2') {
                    sh 'docker-compose stop frontend || true'
                    sh 'docker-compose rm -f frontend || true'
                    sh 'docker-compose up frontend -d'
                }
            }
        }

        stage('Remove old image') {
            steps {
                script {
                    sh 'docker image prune -f'
                }
            }
        }
    }
}
